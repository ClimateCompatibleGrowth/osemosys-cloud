version: 2
jobs:
  test:
    docker:
       - image: circleci/ruby:2.6.2-node-browsers
       - image: circleci/postgres:10-alpine-postgis-ram
       - image: circleci/redis:3
    environment:
      - RACK_ENV: test

    steps:
      - checkout

      - run:
          name: install glpk
          command: |
            sudo apt-get install glpk-utils coinor-cbc python3-pandas

      # Download and cache dependencies
      - restore_cache:
          keys:
          - osemosys-cloud-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - osemosys-cloud-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - run:
          name: install yarn dependencies
          command: |
            yarn install

      - save_cache:
          paths:
            - ./vendor/bundle
          key: osemosys-cloud-dependencies-{{ checksum "Gemfile.lock" }}

      - run: bundle exec srb tc
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      - run:
          name: run tests
          command: |
            bundle exec rspec --format progress

  publish_docker_image:
    docker:
       - image: circleci/ruby:2.6.2-node-browsers
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Build docker image
          command: |
            docker-compose build osemosys

      - run:
          name: Publish docker image
          command: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
            docker push yboulkaid/osemosys:latest

  deploy_to_heroku:
    docker:
       - image: circleci/ruby:2.6.2-node-browsers
    steps:
      - checkout
      - run:
          name: Deploy to heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2
  test-deploy:
    jobs:
      - test
      - deploy_to_heroku:
          requires:
            - test
          filters:
            branches:
              only: master
      - publish_docker_image:
          requires:
            - test
          filters:
            branches:
              only: master

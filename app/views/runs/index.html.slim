h1 My runs

table.table
  tr
    th Id
    th Name
    th Model file
    th Data file
    th Result file
    th Log file
    th Queued at
    th Started at
    th Finished at
    th Duration
    th Status

  - @runs.each do |run|
    tr
      td = run.id
      td = run.name
      td
        - if run.model_file.attached?
          = link_to(run.model_file.filename.to_s, rails_blob_path(run.model_file, disposition: 'attachment'))
      td
        - if run.data_file.attached?
          = link_to(run.data_file.filename.to_s, rails_blob_path(run.data_file, disposition: 'attachment'))
      td
        - if run.result_file.attached?
          = link_to(run.result_file.filename.to_s, rails_blob_path(run.result_file, disposition: 'attachment'))
      td
        - if run.log_file.attached?
          = link_to(run.log_file.filename.to_s, rails_blob_path(run.log_file, disposition: 'attachment'))
      td
        - if run.queued_at?
          = distance_of_time_in_words_to_now(run.queued_at) + ' ago'
      td
        - if run.started_at?
          = distance_of_time_in_words_to_now(run.started_at) + ' ago'
      td
        - if run.finished_at?
          = distance_of_time_in_words_to_now(run.started_at) + ' ago'
      td
        - if run.solving_time
          = distance_of_time_in_words(run.started_at, run.finished_at, include_seconds: true)
      td
        - if run.can_be_queued?
          = link_to('start', start_run_path(run), method: :post)
        - else
          = run.status

= link_to('New run', new_run_path, class: 'btn btn-primary')
